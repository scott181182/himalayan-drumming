### This file was generated by Nexus Schema
### Do not make changes to this file directly


type FileEntry {
  children: [FileEntry!]
  id: ID!
  metadata: FileMetadata
  name: String!
  parent: FileEntry
  parentId: ID
  people: [Person!]!
  tags: [String!]!
  type: String!
  url: String
}

type FileMetadata {
  file: FileEntry!
  fileId: ID!
  location: LatLng
  locationId: ID
}

input FileMetadataCreateLocationInput {
  connect: IdWhereUniqueInput
  create: LatLngCreateInput
}

input FileMetadataUpdateInput {
  location: FileMetadataCreateLocationInput
}

input IdWhereUniqueInput {
  id: ID!
}

type LatLng {
  id: ID!
  latitude: Float!
  longitude: Float!
}

input LatLngCreateInput {
  latitude: Float!
  longitude: Float!
}

type Mutation {
  createPerson(data: PersonCreateInput!): Person!
  createVillage(data: VillageCreateInput!): Village!

  """
  Perform a full scan of OneDrive and other file sources. Creates, updates, and deletes entries as necessary.
  """
  fullscan: FileEntry
  tagFile(fileId: ID!, tag: String!): FileEntry!
  untagFile(fileId: ID!, tag: String!): FileEntry!
  updateMetadata(data: FileMetadataUpdateInput!, fileId: ID!): FileMetadata!
  updatePerson(data: PersonUpdateInput!, id: ID!): Person!
}

type Person {
  children: [Person!]!
  files: [FileEntry!]!
  id: ID!
  name: String!
  parent: Person
  parentId: String
}

input PersonCreateInput {
  name: String!
  parentId: String
  village: PersonInVillageCreateInput
}

input PersonInVillageCreateInput {
  description: String
  villageId: ID!
}

input PersonUpdateInput {
  name: String
  parentId: String
  village: PersonInVillageCreateInput
}

type Query {
  fileEntries: [FileEntry!]!
  fileEntry(id: String!): FileEntry
  people: [Person!]!
  person(id: ID!): Person
  rootFileEntry: FileEntry!
  tags: [String!]!
  village(id: ID!): Village
  villages: [Village!]!
}

type Village {
  id: ID!
  location: LatLng!
  locationId: String!
  name: String!
}

input VillageCreateInput {
  location: VillageCreateLocationInput!
  name: String!
}

input VillageCreateLocationInput {
  connect: IdWhereUniqueInput
  create: LatLngCreateInput
}